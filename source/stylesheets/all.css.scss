@import "compass";
@import "compass/reset";

html, body {
  height: 100%;
  @include background-image(radial-gradient(#205983, #0A2742));
  background-repeat: no-repeat;
  background-size: contain;
}

body {
  padding: 30px;
}

@mixin user-select($value) {
  -moz-user-select: $value;
  -khtml-user-select: $value;
  -webkit-user-select: $value;
  user-select: $value;
}

@mixin unselectable {
  pointer-events: none;
  @include user-select(none);
}

$font-size: 100px;
$line-height: 1.5;
$min-height: $font-size * $line-height;

@mixin text-style {
  font-family: 'Lobster', serif;
  font-size: $font-size;
  font-weight: bold;
  line-height: $line-height;
  letter-spacing: 1;
  vertical-align: baseline;

  color: #fff;
  @include text-shadow(0px 2px 4px #000);
}

h1 {
  @include text-style;
  font-size: 20px;
  text-align: center;
}

@mixin keyframes($name){
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@include keyframes(move) {
  from {
    @include opacity(0);
    @include transform( translate(100px, 0px) scale(3) rotate(90deg) );
  }
  to {
    @include opacity(1);
    @include transform( translate(0px, 0px) scale(1) rotate(0deg) );
  }
}


.special-text-input {
  display: block; /* 横目いっぱい: 親要素に幅を譲る */

  /* テキストフィールドっぽいスタイルにする */
  background: #19466a;
  @include box-shadow(rgba(255, 255, 255, .4) 0px 0px 3px);
  @include border-radius(6px);

  > .inner {
    position: relative;
    display: block;
    width: auto;
    height: auto;

    min-height: $min-height; /* 文字なないときに一文字分の高さをとる */
    margin: 30px;
  }

  input, .display {
    /* 大きさをぴったり合わせる */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    background: transparent;
  }

  input {
    /* inputのデフォルトスタイルとる */
    @include appearance(none);
    @include box-shadow(none);
    outline: none;
    border: none;
    z-index: 1;

    @include text-style;

    color: transparent;

  }

  .display {
    z-index: 2;
    font-size: 0px; /* white-spaceの幅を消す */
    @include unselectable;
  }

  .display > span {
    @include inline-block; /* アニメーションさせたい */
    @include text-style;
    overflow: visible;

    /* 選択負荷にする */
    @include unselectable;

    &.move {
        @include transform-style(preserve-3d);
        @include experimental(animation-name, move);
        @include experimental(animation-duration, 0.2s);
        @include experimental(animation-timing-function, cubic-bezier(0.770, 0.000, 0.175, 1.000) );
    }
  }
}
